{"version":3,"file":"component---src-pages-game-tsx-9b8859016e2ea7368b45.js","mappings":"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","sources":["webpack://portfolio/./src/atoms/loading/loading.tsx","webpack://portfolio/./src/atoms/loading/loading.module.scss","webpack://portfolio/./src/components/gameHero/gameHero.module.scss","webpack://portfolio/./src/atoms/wordGame/wordGame.module.scss","webpack://portfolio/./src/utilities/containsChar.ts","webpack://portfolio/./src/utilities/randomNumber.ts","webpack://portfolio/./src/utilities/word.ts","webpack://portfolio/./src/atoms/wordGame/wordGame.tsx","webpack://portfolio/./src/components/gameHero/gameHero.tsx","webpack://portfolio/./src/pages/game.tsx","webpack://portfolio/./src/utilities/sleep.ts"],"sourcesContent":["import React from \"react\"\nimport * as styles from \"./loading.module.scss\"\n\nconst Loading = (): JSX.Element => {\n return (\n  <div className={styles.wrapper}>\n   <div className={styles.circle1} />\n   <div className={styles.circle2} />\n   <div className={styles.circle3} />\n  </div>\n )\n}\n\nexport default Loading\n","// extracted by mini-css-extract-plugin\nexport var circle = \"loading-module--circle--s+OVP\";\nexport var circle1 = \"loading-module--circle1--EEw6R\";\nexport var circle2 = \"loading-module--circle2--ltN4n\";\nexport var circle3 = \"loading-module--circle3--62FXg\";\nexport var pop = \"loading-module--pop--B747O\";\nexport var wrapper = \"loading-module--wrapper--77Ghu\";","// extracted by mini-css-extract-plugin\nexport var buttonOn = \"gameHero-module--buttonOn--HYQIy\";\nexport var buttonRestart = \"gameHero-module--buttonRestart--9Fexk\";\nexport var buttonStart = \"gameHero-module--buttonStart--nh2bW\";\nexport var buttons = \"gameHero-module--buttons--5FOOp\";\nexport var game = \"gameHero-module--game--6L7df\";\nexport var head = \"gameHero-module--head--YGxS9\";\nexport var language = \"gameHero-module--language--ViDX0\";\nexport var max = \"gameHero-module--max--BY8wO\";\nexport var restart = \"gameHero-module--restart--VVh0X\";\nexport var text = \"gameHero-module--text--EmG2r\";","// extracted by mini-css-extract-plugin\nexport var buttonHint = \"wordGame-module--buttonHint--66Amu\";\nexport var charList = \"wordGame-module--charList--RuyiJ\";\nexport var charListOrange = \"wordGame-module--charListOrange--C663p\";\nexport var check = \"wordGame-module--check--UYMSd\";\nexport var ctaDefinition = \"wordGame-module--ctaDefinition--OPwOy\";\nexport var form = \"wordGame-module--form--mQSFc\";\nexport var input = \"wordGame-module--input--D-jTS\";\nexport var letters = \"wordGame-module--letters--GkFLI\";\nexport var lettersWrapper = \"wordGame-module--lettersWrapper--uerVE\";\nexport var victory = \"wordGame-module--victory--a92-+\";","const containsChar = (word: string, char: string): boolean => {\n const tmp = Array.from(word)\n let i\n for (i = 0; i < tmp.length; i++) {\n  if (tmp[i].toUpperCase() === char.toUpperCase()) return true\n }\n\n return false\n}\n\nexport default containsChar\n","const randomNumber = (min: number, max: number) => {\n return Math.floor(Math.random() * max + min)\n}\n\nexport default randomNumber\n","import randomNumber from \"./randomNumber\"\n//import data from './words.json'\nimport dataEN from \"./dictionary.json\"\nimport dataIT from \"./parole.json\"\n\nconst randomWord = (length: number = 20, language: string = \"en\"): string => {\n const data = language === \"en\" ? dataEN : dataIT\n const keys = Object.keys(data)\n const l = keys.length\n let rand\n\n while (true) {\n  rand = randomNumber(0, l - 1)\n  if (keys[rand].length <= length && keys[rand].match(/^([a-z]|[A-Z])*$/i)) break\n }\n\n return keys[rand]\n}\n\nexport const getDefinition = (key: string): string => {\n return dataEN[key]\n}\n\nexport default randomWord\n","import React, {useEffect, useState} from \"react\"\n\nimport * as styles from \"./wordGame.module.scss\"\nimport {WordGameProps} from \"./wordGame.types\"\n\nimport containsChar from \"../../utilities/containsChar\"\nimport sleep from \"../../utilities/sleep\"\nimport {getDefinition} from \"../../utilities/word\"\n\nconst alphabet: string[] = Array.from(\"abcdefghijklmnopqrstuvwxyz\")\n\nconst WordGame = ({word, language}: WordGameProps): JSX.Element => {\n const [chars, setChars] = useState<string[]>([])\n const [victory, setVictory] = useState<boolean>(false)\n\n const [inLetters, setInLetters] = useState<string>(\"\")\n const [okLetters, setOkLetters] = useState<string>(\"\")\n const [remainings, setRemainings] = useState<string[]>(alphabet)\n\n const [attempts, setAttempts] = useState<number>(0)\n\n const [definition, setDefinition] = useState<boolean>(false)\n\n const [lan, setLan] = useState<string>(language)\n\n const [hint, setHint] = useState<boolean>(false)\n\n useEffect(() => {\n  setLan(language)\n  setChars(Array.from(word))\n  console.log(`\nOh you've arrived here...\nWhat are you looking for? \nWhat do you expect to find here?\nI'm having fun with ${word}... \nGo somewhere else or try to guess the word `)\n\n  if (document.getElementById(\"input0\")) document.getElementById(\"input0\")?.focus()\n  else sleep(1000).then(() => document.getElementById(\"input0\")?.focus())\n }, [word])\n\n const nextInput = (form: any, index: number): void => {\n  if (form.elements[index + 1].value == \"Check\") return\n\n  if (form.elements[index + 1].disabled) nextInput(form, index + 1)\n  else form.elements[index + 1]?.focus()\n }\n\n const previousInput = (form: any, index: number): void => {\n  if (form.elements[index - 1] && form.elements[index - 1].disabled) previousInput(form, index - 1)\n  else form.elements[index - 1]?.focus()\n }\n\n const handleEnter = (event: any): void => {\n  const form = event.target.form\n  const index = [...form].indexOf(event.target)\n\n  if (event.key.toLowerCase() === \"enter\" || event.key.toLowerCase() === \"arrowright\") {\n   nextInput(form, index)\n   event.preventDefault()\n  } else if (event.key.toLowerCase() === \"arrowleft\") {\n   previousInput(form, index)\n   event.preventDefault()\n  } else if (event.key.toLowerCase() === \"backspace\" && event.target.value === \"\") {\n   previousInput(form, index)\n  }\n }\n\n const handleChange = (event: any) => {\n  const form = event.target.form\n  const index = [...form].indexOf(event.target)\n\n  if (event.target.value == \" \" || event.target.value == \"\" || !event.target.value.match(\"^([a-z]|[A-Z])*$\")) {\n   event.target.value = \"\"\n  } else {\n   nextInput(form, index)\n   event.preventDefault()\n  }\n }\n\n const check = (event: any) => {\n  const form = event.target.form || document.getElementById(\"form\")\n  const tmpArray: string[] = []\n  let tmpString = \"\"\n\n  let tmpIn = inLetters\n  let tmpOk = okLetters\n  let tmpRem = remainings\n\n  setAttempts(attempts * 1 + 1)\n\n  for (let i = 0; i < word.length; i++) {\n   tmpArray.push(form.elements[i].value)\n   tmpString += form.elements[i].value\n  }\n\n  for (let i = 0; i < tmpArray.length; i++) {\n   tmpRem = tmpRem.filter((value, _index, _arr) => {\n    return value != tmpArray[i]\n   })\n   if (!containsChar(tmpIn, tmpArray[i])) tmpIn += tmpArray[i]\n\n   if (containsChar(word, tmpArray[i]) && tmpArray[i] != \"\") {\n    document.getElementById(\"input\" + i)!.style.backgroundColor = \"var(--orange)\"\n\n    if (!containsChar(tmpOk, tmpArray[i])) tmpOk += tmpArray[i]\n   } else {\n    document.getElementById(\"input\" + i)!.style.backgroundColor = \"\"\n   }\n\n   if (tmpArray[i].toUpperCase() === chars[i].toUpperCase()) {\n    document.getElementById(\"input\" + i)!.style.backgroundColor = \"var(--pink)\"\n    document.getElementById(\"input\" + i)!.setAttribute(\"disabled\", \"disabled\")\n   }\n  }\n\n  if (word.toUpperCase() === tmpString.toUpperCase()) setVictory(true)\n  else\n   document\n    .getElementById(\"trebbling\")!\n    .animate(\n     [\n      {transform: \"none\"},\n      {transform: \"translateX(10px) rotateZ(1deg)\"},\n      {transform: \"translateX(-10px) rotateZ(1deg)\"},\n      {transform: \"translateX(10px) rotateZ(-1deg)\"},\n      {transform: \"translateX(-10px) rotateZ(-1deg)\"},\n      {transform: \"none\"},\n     ],\n     {\n      duration: 300,\n      easing: \"linear\",\n     }\n    )\n\n  setInLetters(tmpIn)\n  setOkLetters(tmpOk)\n  setRemainings(tmpRem)\n }\n\n const toggleDefinition = () => setDefinition(!definition)\n const toggleHint = () => setHint(!hint)\n\n return (\n  <form id={\"form\"} className={styles.form}>\n   <div id={\"trebbling\"}>\n    {chars.map((_char, key) => {\n     return (\n      <input\n       type={\"text\"}\n       key={key}\n       className={styles.input}\n       id={\"input\" + key}\n       name={\"input\" + key}\n       tabIndex={key + 1}\n       enterKeyHint={\"next\"}\n       maxLength={1}\n       onKeyDown={handleEnter}\n       onChange={handleChange}\n       pattern={\"^([a-z]|[A-Z])*$\"}\n      />\n     )\n    })}\n   </div>\n   {victory ? (\n    <div className={styles.victory}>\n     <h2>\n      YOU HAVE GUESSED THE WORD <span style={{color: \"var(--pink)\"}}>{word.toUpperCase()}</span> IN {attempts}{\" \"}\n      {attempts == 1 ? \"ATTEMPT\" : \"ATTEMPTS\"}!!\n     </h2>\n     {lan === \"en\" ? (\n      <>\n       <button type={\"button\"} className={styles.ctaDefinition} onClick={toggleDefinition}>\n        {definition ? `HIDE` : `SHOW`} DEFINITION\n       </button>\n       {definition ? (\n        <p>\n         <span style={{color: \"var(--pink)\"}}>{word}</span>: {getDefinition(word)}\n        </p>\n       ) : null}\n      </>\n     ) : null}\n    </div>\n   ) : (\n    <>\n     <button className={styles.check} type={\"button\"} value={\"Check\"} onClick={check}>\n      CHECK\n     </button>\n     <p>Attempts: {attempts}</p>\n    </>\n   )}\n   <div className={styles.lettersWrapper}>\n    <div className={styles.letters}>\n     <p>Letters of the word</p>\n     <div className={styles.charListOrange}>\n      {Array.from(okLetters).map((letter, key) => {\n       return <p key={key}>{letter}</p>\n      })}\n     </div>\n    </div>\n    <div className={styles.letters}>\n     <p>Letters used</p>\n     <div className={styles.charList}>\n      {Array.from(inLetters).map((letter, key) => {\n       return <p key={key}>{letter}</p>\n      })}\n     </div>\n    </div>\n   </div>\n   <button type=\"button\" className={styles.buttonHint} onClick={toggleHint}>\n    {hint ? \"HIDE\" : \"SHOW\"} HINT\n   </button>\n   {hint ? (\n    <div className={styles.letters}>\n     <p>Remaining letters</p>\n     <div className={styles.charList}>\n      {remainings.map((letter, key) => {\n       return <p key={key}>{letter}</p>\n      })}\n     </div>\n    </div>\n   ) : null}\n  </form>\n )\n}\n\nexport default WordGame\n","import React, {useState} from \"react\"\n\nimport * as styles from \"./gameHero.module.scss\"\n\nimport Loading from \"../../atoms/loading/loading\"\nimport WordGame from \"../../atoms/wordGame/wordGame\"\nimport randomWord from \"../../utilities/word\"\n\nconst GameHero = (): JSX.Element => {\n const [fetched, setFetched] = useState<boolean>(false)\n const [word, setWord] = useState<string>(\"\")\n const [started, setStarted] = useState<boolean>(false)\n const [length, setLength] = useState<number>(7)\n\n const [language, setLanguage] = useState<string>(\"en\")\n\n /*const fetchData = async () => {\n        setFetched(false);\n        setStarted(true);\n        const response = await fetch('https://random-word-api.herokuapp.com/word?number=1&swear=0');\n        if (response.ok) {\n            const data = await response.json();\n            if (data[0].length > length) fetchData();\n            else {\n                setWord(data[0]);\n                setFetched(true);\n            }\n        }\n    } */\n\n const fetchRightWord = async (length: number): Promise<string> => {\n  await new Promise((resolve) => setTimeout(resolve, 1500))\n  const data = randomWord(length, language)\n  return data\n }\n\n const fetchData = async () => {\n  setFetched(false)\n  setStarted(true)\n  const data = fetchRightWord(length)\n  setWord(await data)\n  setFetched(true)\n }\n\n const increase = () => setLength(length * 1 + 1)\n const decrease = () => {\n  if (length >= 4) setLength(length * 1 - 1)\n }\n\n const changeLanguage = () => {\n  if (language === \"en\") setLanguage(\"it\")\n  else setLanguage(\"en\")\n }\n\n return (\n  <div className={styles.game}>\n   {started ? (\n    <div className={styles.restart}>\n     <p>Guess the word or </p>\n     <button onClick={fetchData} className={styles.buttonRestart}>\n      RESTART\n     </button>\n    </div>\n   ) : (\n    <>\n     <h3>RULES</h3>\n     <h4>\n      The game is easy. <br />\n      You guess the secret word by placing letters in boxes.\n      <br />\n      <br />\n      <li>\n       When you guess a letter, the box turns <span style={{color: \"var(--orange)\"}}>orange</span>\n      </li>\n      <li>\n       When you guess both the letter and the position in the word, the box turns{\" \"}\n       <span style={{color: \"var(--pink)\"}}>pink</span>\n      </li>\n      <br />\n      You can change the MAX length and the language of the hidden word at the top. <br />\n      <br />\n      That's all! Enjoy the game!\n     </h4>\n    </>\n   )}\n   <div className={styles.head}>\n    <div className={styles.max}>\n     <div className={styles.text}>\n      <p>Max word length is</p>\n     </div>\n\n     <div className={styles.buttons}>\n      <button onClick={increase}>{`>`}</button>\n      <div>{length}</div>\n      <button onClick={decrease}>{`<`}</button>\n     </div>\n    </div>\n    <div className={styles.language}>\n     <p>Language </p>\n     <button onClick={changeLanguage} className={language.toUpperCase() == \"EN\" ? styles.buttonOn : \"\"}>\n      ENGLISH\n     </button>\n     <button onClick={changeLanguage} className={language.toUpperCase() == \"IT\" ? styles.buttonOn : \"\"}>\n      ITALIAN\n     </button>\n    </div>\n   </div>\n\n   {!started ? (\n    <button onClick={fetchData} className={styles.buttonStart}>\n     START\n    </button>\n   ) : (\n    <></>\n   )}\n\n   {fetched ? <WordGame word={word} language={language} /> : started ? <Loading /> : null}\n  </div>\n )\n}\n\nexport default GameHero\n","import React from \"react\"\nimport GameHero from \"../components/gameHero/gameHero\"\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo/seo\"\n\nconst Game = () => {\n return (\n  <>\n   <SEO title={\"Word Game\"} description={\"Play this word game\"} />\n   <Layout noMenu={true}>\n    <GameHero />\n   </Layout>\n  </>\n )\n}\n\nexport default Game\n","const sleep = (milliseconds: number): Promise<unknown> => {\n return new Promise((resolve) => setTimeout(resolve, milliseconds))\n}\n\nexport default sleep\n"],"names":["React","className","buttonOn","charList","letters","word","char","i","tmp","Array","from","length","toUpperCase","min","max","Math","floor","random","language","rand","data","dataEN","dataIT","keys","Object","l","randomNumber","match","alphabet","useState","chars","setChars","victory","setVictory","inLetters","setInLetters","okLetters","setOkLetters","remainings","setRemainings","attempts","setAttempts","definition","setDefinition","lan","setLan","hint","setHint","useEffect","console","log","document","getElementById","focus","sleep","then","_document$getElementB2","nextInput","form","index","elements","value","disabled","previousInput","handleEnter","event","target","_toConsumableArray","indexOf","key","toLowerCase","preventDefault","handleChange","id","map","_char","type","name","tabIndex","enterKeyHint","maxLength","onKeyDown","onChange","pattern","style","color","onClick","tmpArray","tmpString","tmpIn","tmpOk","tmpRem","push","filter","_index","_arr","containsChar","backgroundColor","setAttribute","animate","transform","duration","easing","styles","letter","fetched","setFetched","setWord","started","setStarted","setLength","setLanguage","fetchRightWord","Promise","resolve","setTimeout","randomWord","fetchData","_context2","changeLanguage","WordGame","Loading","SEO","title","description","Layout","noMenu","GameHero","milliseconds"],"sourceRoot":""}